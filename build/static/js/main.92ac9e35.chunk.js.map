{"version":3,"sources":["services/api-service.js","components/App.js","index.js"],"names":["baseUrl","apiService","getAll","axios","get","then","response","data","create","payload","post","deleteItem","id","delete","update","put","Search","searchName","handleSearchNameChange","value","onChange","Form","props","newName","newNumber","handleNameChange","handleNumberChange","addName","type","onClick","List","persons","setPersons","setNotify","console","log","map","person","Persons","name","number","window","confirm","newPersons","filter","setTimeout","catch","error","Notification","notify","includes","className","App","useState","searchList","setSearchList","setNewName","setNewNumber","setSearchName","useEffect","event","target","result","toLowerCase","preventDefault","some","entry","find","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92ac9e35.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => response.data);\r\n};\r\n\r\nconst create = (payload) => {\r\n  return axios.post(baseUrl, payload).then((response) => response.data);\r\n};\r\n\r\nconst deleteItem = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst update = (id, payload) => {\r\n  return axios.put(`${baseUrl}/${id}`, payload);\r\n};\r\n\r\nconst apiService = {\r\n  getAll,\r\n  create,\r\n  deleteItem,\r\n  update,\r\n};\r\n\r\nexport default apiService;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport apiService from \"../services/api-service\";\r\n\r\nconst Search = ({ searchName, handleSearchNameChange }) => {\r\n  return (\r\n    <div>\r\n      Search:\r\n      <input value={searchName} onChange={handleSearchNameChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Form = (props) => {\r\n  const {\r\n    newName,\r\n    newNumber,\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    addName,\r\n  } = props;\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n        <br />\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={addName}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst List = ({ persons, setPersons, setNotify }) => {\r\n  console.log(persons);\r\n  return (\r\n    <ul>\r\n      {persons.map((person) => {\r\n        return (\r\n          <Persons\r\n            persons={persons}\r\n            key={person.id}\r\n            person={person}\r\n            setPersons={setPersons}\r\n            setNotify={setNotify}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Persons = ({ person, setPersons, persons, setNotify }) => {\r\n  const remove = (id, name) => () => {\r\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\r\n      apiService\r\n        .deleteItem(id)\r\n        .then((response) => {\r\n          const newPersons = persons.filter((person) => person.id !== id);\r\n          setPersons(newPersons);\r\n          setNotify(`${name} successfully deleted`);\r\n          setTimeout(() => setNotify(null), 4000);\r\n        })\r\n        .catch((error) => {\r\n          setNotify(`Sorry, ${name} may have been deleted from the database`);\r\n          setTimeout(() => setNotify(null), 4000);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={remove(person.id, person.name)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Notification = ({ notify }) => {\r\n  if (!notify) {\r\n    return null;\r\n  } else if (notify.includes(\"Sorry\")) {\r\n    return (\r\n      <div className=\"error-notification\">\r\n        <p>{notify}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"success-notification\">\r\n      <p>{notify}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  const [searchList, setSearchList] = useState(persons);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [notify, setNotify] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    apiService.getAll().then((response) => {\r\n      setPersons(response);\r\n      setSearchList(response);\r\n    });\r\n  }, []);\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    const payload = { name: newName, number: newNumber };\r\n\r\n    if (persons.some((person) => person.name === newName)) {\r\n      //alert(`${newName} is already in phonebook`);\r\n      const entry = persons.find(({ name }) => name === newName);\r\n\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already in phonebook, do you want to replace the number?`\r\n        )\r\n      ) {\r\n        apiService\r\n          .update(entry.id, payload)\r\n          .then((response) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== entry.id ? person : response.data\r\n              )\r\n            );\r\n            setNotify(`${newName} successfully updated`);\r\n            setTimeout(() => setNotify(null), 4000);\r\n          })\r\n          .catch((error) => {\r\n            /*  alert(\r\n              `Sorry, ${entry.name} may have been deleted from the database`\r\n            ); */\r\n            setNotify(\r\n              `Sorry, ${entry.name} may have been deleted from the database`\r\n            );\r\n            setTimeout(() => setNotify(null), 4000);\r\n            setPersons(persons.filter((person) => person.id !== entry.id));\r\n          });\r\n      }\r\n    } else {\r\n      apiService.create(payload).then((response) => {\r\n        setPersons(persons.concat(response));\r\n        setNotify(`${newName} successfully added`);\r\n        setTimeout(() => setNotify(null), 5000);\r\n      });\r\n    }\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleSearchNameChange = (event) => {\r\n    setSearchName(event.target.value);\r\n    const result = searchList.filter((person) =>\r\n      person.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setPersons(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Notification notify={notify} />\r\n      <Search\r\n        searchName={searchName}\r\n        handleSearchNameChange={handleSearchNameChange}\r\n      />\r\n      <h2>Phonebook</h2>\r\n      <Form\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        addName={addName}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <List persons={persons} setPersons={setPersons} setNotify={setNotify} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}